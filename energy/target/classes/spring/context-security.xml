<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=
		"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<!-- ******************************************************************************************* -->
    <!-- 인증 / 권한 설정 -->
    <!-- ******************************************************************************************* -->
    <!-- 아래의 Filter는 기본적으로 순서대로 컨테이너에서 처리 함. (ChannelProcessingFilter -> SecurityContenxtPersistenceFilter -> ConcurrentSessionFilter ... )
        ===========================================================================================================
    	Alias							Filter Class							Namespace 설정
    	===========================================================================================================
    	CHANNEL_FILTER					ChannelProcessingFilter					http/intercept-url@requires-channel
    	SESSION_CONTENXT_FILTER			SecurityContenxtPersistenceFilter		http
    	CONCURRENT_SESSION_FILTER		ConcurrentSessionFilter					session-mamanagement/concurrent-control (같은 아이디로 2개 이상 로그인 허용 설정)
    	LOGOUT_FILTER					LogoutFilter							http/logout
    	FORM_LOGIN_FILTER				UsernamePasswordAuthenticationFilter	http/form-login (일반적인 form 로그인 사용시 설정)
    	BASIC_AUTH_FILTER				BasicAuthenticationFilter				http/http-basic (클라이언트 로그인 창 사용시 설정)
    	REMEMBER_ME_FILTER				RememberMeAuthenticationFilter			http/remember-me
    	ANONYMOUS_FILTER				AnonymousAuthenticationFilter			http/anonymous
    	SESSION_MAMAGEMENT_FILTER		SessionManagementFilter					session-management
    	EXCEPTION_TRANSLATION_FILTER	ExceptionTranslationFilter				http
    	FILTER_SECURITY_INTERCEPTOR		FilterSecurityInterceptor				http
    	===========================================================================================================
    -->    	
	
	<http auto-config="true" use-expressions="true" >	
    		
    	<custom-filter ref="ajaxSessionTimeoutFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
    	
	    <!--
	    	***** intercept-url의 access 설정 *****
	    	hasIpAddress(ip) : 접근자의 IP주소가 매칭
	    	hasRole(role) : 역할이 부여된 권한(Granted Authority)와 일치하는지 확인
	    	hasAnyRole(role) : 부여된 역할 중 일치하는 항목이 있는지 확인
	    	permitAll : 모든 접근자를 항상 승인
	    	denyAll : 모든 사용자의 접근을 거부
	    	anonymous : 사용자가 익명 사용자인지 확인
	    	authenticated : 인증된 사용자인지 확인
	    	rememberMe : 사용자가 remember me를 사용해 인증했는지 확인
	    	fullyAuthenticated : 사용자가 모든 크리덴셜을 갖춘 상태에서 인증했는지 확인    	
	    	AND, OR연산도 가능 => access = "hasAnyRole('ROLE_USER','ROLE_ADMIN') or authenticated"
	    -->
    
		<intercept-url pattern="/assets/**" access="permitAll"/>
		<intercept-url pattern="/captcha/**" access="permitAll"/>
		<intercept-url pattern="/css/**" access="permitAll"/>
		<intercept-url pattern="/font/**" access="permitAll"/>
		<intercept-url pattern="/images/**" access="permitAll"/>
		<intercept-url pattern="/js/**" access="permitAll"/>
		<intercept-url pattern="/smarteditor2/**" access="permitAll"/>
		<intercept-url pattern="/contents/**" access="permitAll"/>
		<intercept-url pattern="/auth.jsp" access="permitAll"/>
		<intercept-url pattern="/error.jsp" access="permitAll"/>
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/admin" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**" access="permitAll"/>
		
		<form-login 
			login-page="/login.do"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler"/>
			
		<logout invalidate-session="true" logout-success-url="/admin.do"></logout>
				
		<!-- 
	    <port-mappings>
           <port-mapping http="80" https="8443"/>
        </port-mappings>
         -->
         
    	<!-- <session-management session-fixation-protection="none"/> -->
    	
		<access-denied-handler ref="acessDeniedHandler"/>
    	
	</http>
	
	
	<!-- ******************************************************************************************* -->
    <!-- 로그인 성공 / 실패 핸들러 -->
    <!-- ******************************************************************************************* -->
	<beans:bean id="loginSuccessHandler" class="kr.or.wabis.login.handler.LoginSuccessHandler" />
	<beans:bean id="loginFailureHandler" class="kr.or.wabis.login.handler.LoginFailureHandler" />
	<beans:bean id="userDao" class="kr.or.wabis.dao.user.UserDao" />
	<beans:bean id="userService" class="kr.or.wabis.user.service.UserServiceImpl" />

    
    <!-- ******************************************************************************************* -->
    <!-- 로그인 인증 관리 -->
    <!-- ******************************************************************************************* -->
	<authentication-manager alias="authenticationManage">
		<authentication-provider ref="loginAuthenticationProvider" />
	</authentication-manager>
	
	<beans:bean id="loginAuthenticationProvider" class="kr.or.wabis.login.provider.LoginAuthenticationProvider" />
	
	
	<!-- ******************************************************************************************* -->
    <!-- Ajax 세션 시간 필터 -->
    <!-- ******************************************************************************************* -->
	<beans:bean id="ajaxSessionTimeoutFilter" class="kr.or.wabis.framework.web.filter.AjaxSessionCheckFilter">
        <beans:property name="ajaxHeader" value="AJAX" />
    </beans:bean>
	
	
	<!-- ******************************************************************************************* -->
    <!-- 기본 경로 외의 주소창에 입력해서 들어오는 다른 경로 접근 처리 -->
    <!-- ******************************************************************************************* -->
	<beans:bean id="acessDeniedHandler" class="kr.or.wabis.framework.web.handler.AccessDeniedHandlerImpl">
        <beans:property name="redirect" value="false" />
        <beans:property name="errorPage" value="/login.do" />
    </beans:bean>
	
    
</beans:beans>
