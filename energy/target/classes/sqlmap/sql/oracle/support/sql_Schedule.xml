<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ScheduleDao">

	 <resultMap id="scheduleMap" type="Map">
		<result property="evt_sn" column="evt_sn" />
		<result property="domestic_yn" column="domestic_yn" />
		<result property="evt_strt_dt" column="evt_strt_dt" />
		<result property="evt_end_dt" column="evt_end_dt" />
		<result property="evt_ttle" column="evt_ttle" />
		<result property="evt_cn" column="evt_cn" />
		<result property="evt_tp_icon" column="evt_tp_icon" />
		<result property="del_yn" column="del_yn" />
		<result property="reg_userno" column="reg_userno" />
		<result property="reg_date" column="reg_date" />
		<result property="upd_userno" column="upd_userno" />
		<result property="upd_date" column="upd_date" />
	</resultMap>
	
	<select id="selectScheduleList" parameterType="Map" resultMap="scheduleMap">
		SELECT 
	   		evt_sn
			, domestic_yn
			, TO_CHAR( evt_strt_dt , 'YYYY-MM-DD' ) AS evt_strt_dt
			, TO_CHAR( evt_end_dt , 'YYYY-MM-DD' ) AS evt_end_dt
			, evt_ttle
			, evt_cn
			, evt_tp_icon
			, del_yn
			, reg_userno
			, GET_DATEFORMAT( reg_date ) AS reg_date
			, upd_userno
			, GET_DATEFORMAT( upd_date ) AS upd_date
		FROM 
			T_EVT_SCHD
		WHERE 
			1 = 1 AND del_yn = 'N'
			<if test='evt_sn != null and ! evt_sn.equals( "" )' >
				AND evt_sn = #{evt_sn}
			</if>
			<if test='domestic_yn != null and ! domestic_yn.equals( "" )' >
				AND domestic_yn = #{domestic_yn}
			</if>
			<if test='evt_ttle != null and ! evt_ttle.equals( "" )' >
				AND evt_ttle LIKE '%' || #{evt_ttle} || '%'
			</if>
			<if test='evt_cn != null and ! evt_cn.equals( "" )' >
				AND evt_cn LIKE '%' || #{evt_cn} || '%'
			</if>
			<if test='evt_strt_dt != null and ! evt_strt_dt.equals( "" )' >
			<![CDATA[
				AND evt_end_dt >= #{evt_strt_dt}
			]]>	
			</if>
			<if test='evt_end_dt != null and ! evt_end_dt.equals( "" )' >
			<![CDATA[
				AND evt_strt_dt <= #{evt_end_dt}
			]]>
			</if>	
			<if test='evt_tp_icon != null and ! evt_tp_icon.equals( "" )' >
				AND evt_tp_icon = #{evt_tp_icon}
			</if>
			<if test='del_yn != null and !del_yn.equals( "" )' >
				AND del_yn = #{del_yn}
			</if>	
			ORDER BY evt_sn DESC				
	</select>

	
	<select id="selectSchedule" parameterType="Map" resultMap="scheduleMap">
		SELECT 
	   		evt_sn
			, domestic_yn
			, TO_CHAR( evt_strt_dt , 'YYYY-MM-DD' ) AS evt_strt_dt
			, TO_CHAR( evt_end_dt , 'YYYY-MM-DD' ) AS evt_end_dt
			, evt_ttle
			, evt_cn
			, evt_tp_icon
			, del_yn
			, reg_userno
			, GET_DATEFORMAT( reg_date ) AS reg_date
			, upd_userno
			, GET_DATEFORMAT( upd_date ) AS upd_date
		FROM 
			T_EVT_SCHD
		WHERE 
			evt_sn = #{evt_sn}						
	</select>
	
	
	<update id="insertSchedule" parameterType="Map" >
		INSERT INTO T_EVT_SCHD (
			evt_sn
			, domestic_yn
			, evt_strt_dt
			, evt_end_dt
			, evt_ttle
			, evt_cn
			, evt_tp_icon
			, del_yn
			, reg_userno
			, reg_date
			, upd_userno
			, upd_date
		) VALUES ( 
			( SELECT NVL( MAX( evt_sn ) , 0 ) + 1 FROM T_EVT_SCHD )
			, #{domestic_yn}
			, TO_DATE( #{evt_strt_dt} || ' 00:00:00' , 'YYYY-MM-DD HH24:MI:SS' )
			, TO_DATE( #{evt_end_dt} || ' 23:59:59' , 'YYYY-MM-DD HH24:MI:SS' )
			, #{evt_ttle}
			, #{evt_cn}
			, #{evt_tp_icon}
			, 'N'
			, #{s_user_no}
			, TO_CHAR( SYSDATE , 'YYYYMMDDHH24MISS' )			
			, #{s_user_no}
			, TO_CHAR( SYSDATE , 'YYYYMMDDHH24MISS' )
		)
	</update>
	
	<update id="updateSchedule" parameterType="Map" >
	    UPDATE T_EVT_SCHD
		SET
			domestic_yn = #{domestic_yn}
			, evt_strt_dt =  TO_DATE( #{evt_strt_dt} || ' 00:00:00' , 'YYYY-MM-DD HH24:MI:SS' )
			, evt_end_dt =  TO_DATE( #{evt_end_dt} || ' 00:00:00' , 'YYYY-MM-DD HH24:MI:SS' )
			, evt_ttle = #{evt_ttle}
			, evt_cn = #{evt_cn}
			, evt_tp_icon = #{evt_tp_icon}
			, upd_userno = #{s_user_no}
			, upd_date = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE 
			evt_sn = #{evt_sn}
	</update>
	
	<update id="deleteSchedule" parameterType="Map" >
	 	UPDATE T_EVT_SCHD
	 	SET del_yn = 'Y' 
		WHERE 	
			evt_sn = #{evt_sn}
	</update>	
	
</mapper>
